// <div id="drawer" class="drawer-right">
// 	<input id="drawer-check" class="drawer-hidden" type="checkbox">
// 	<label id="drawer-open" class="drawer-open-fixed" for="drawer-check">
// 		<span></span>
// 	</label>
// 	<label id="drawer-close" class="drawer-hidden" for="drawer-check"></label>
// 	<div id="drawer-content">
// 	</div>
// 	<!-- drawer-content -->
// </div>
// <!-- drawer -->
#drawer {
	position: fixed;
	top: 0;
	left: 0;
	z-index: map-get($layer, 'drawer');
	display: none;

	&.drawer-right {
		left: auto;
		right: 0;
	}
	@include mq('sp') {
		display: block;
	}
}

.drawer-hidden {
	display:none;
}

#drawer-open {
	display: inline-block;
	width: $drawer-icon-width;
	height: $drawer-icon-height;
	vertical-align: middle;
	position: relative;
	transform: translateX(0);
	transition: $drawer-speed ease-in-out;
	cursor: pointer;
	background: $bar-bg;

	span {
		position: absolute;
		display: block;
		top: 50%;
		left: 50%;
		height: $bar-height;
		width: $bar-width;
		margin: (-$bar-height/2) 0 0 (-$bar-width/2);
		background: $bar-color;
		border-radius: $bar-radius;
		transition: $drawer-speed ease-in-out;

		&::before,
		&::after {
			position: absolute;
			width: 100%;
		  height: 100%;
			border-radius: $bar-radius;
			background: $bar-color;
			display: block;
			content: '';
			cursor: pointer;
			margin: (-$bar-height/2) 0 0 -50%;
			top: 50%;
			left: 50%;
			transform: rotate(0);
			transition: $drawer-speed ease-in-out;
		}

		&::before {
			margin-top: -$bar-height - $bar-height/2 - $bar-space;
			transform: rotate(0);
		}

		&::after {
			margin-top: $bar-height/2 + $bar-space;
			transform: rotate(0);
		}
	}
}

#drawer-close {
	display: none;
	position: fixed;
	z-index: map-get($layer, 'drawer') - 1;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: #000;
	opacity: 0;
	transition: 0.3s ease-in-out;
}

#drawer-content {
	overflow: auto;
	position: fixed;
	top: 0;
	left: 0;
	z-index: map-get($layer, 'drawer');
	width: $drawer-width;
	max-width: 90%;
	height: 100%;
	background: #fff;
	transition: $drawer-speed ease-in-out;
	transform: translateX(-105%);

	.drawer-title {
		font-size: 1em;
		font-weight: bold;
		text-align: center;
		padding: 0 34px;
	}

	#drawer.drawer-right & {
		left: auto;
		right: 0;
		transform: translateX(105%);
		text-align: left;
	}
}

// 例：<label id="drawer-open" class="drawer-open-fixed" for="drawer-check">
#drawer-check:checked ~ #drawer-open.drawer-open-fixed {
	transform: translateX($drawer-width);
	position: relative;
	z-index: map-get($layer,'drawer') + 1;

	span {
		background: rgba($bar-color, 0);

		&::before,
		&::after {
			display: block;
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			border-radius: $bar-radius;
			width: $bar-width;
			height: $bar-height;
			margin: (-$bar-height/2) 0 0 (-$bar-width/2);
			background: $bar-color;
		}

		&::before {
			transform: rotate(-45deg);
		}

		&::after {
			transform: rotate(45deg);
		}
	}

	#drawer.drawer-right & {
		transform: translateX(-$drawer-width);
	}
}

.drawer-close-icon {
	position: relative;
	display: inline-block;
	width: $drawer-icon-width;
	height: $drawer-icon-height;
	vertical-align: middle;
	position: relative;
	cursor: pointer;

	span {

		&::before,
		&::after {
			display: block;
			content: "";
			position: absolute;
			top: 50%;
			left: 50%;
			border-radius: $bar-radius;
			width: $bar-width;
			height: $bar-height;
			margin: (-$bar-height/2) 0 0 (-$bar-width/2);
			background: $bar-color;
		}

		&::before {
			transform: rotate(-45deg);
		}

		&::after {
			transform: rotate(45deg);
		}
	}
}

#drawer-check:checked ~ #drawer-close {
	display: block;
	opacity: 0.4;
}

#drawer-check:checked ~ #drawer-content {
	transform: translateX(0);
	box-shadow: 6px 0 25px rgba(0, 0, 0, 0.15);
}

.drawer-head {
	line-height: $drawer-icon-height;
	text-align: center;
	color: $bar-bg;
	font-size: 1.2em;
	font-weight: bold;
}
